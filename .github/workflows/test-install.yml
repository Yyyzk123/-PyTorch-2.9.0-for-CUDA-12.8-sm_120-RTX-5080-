name: Test Install PyTorch Wheel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  install-test:
    runs-on: ubuntu-latest

    # Ubuntu 24.04 + CUDA 12.8.1 + cuDNN runtime
    container:
      image: nvidia/cuda:12.8.1-cudnn-runtime-ubuntu24.04

    steps:
      # 0️⃣ 拉代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1️⃣ 系统依赖（含 Python 3.10）
      - name: Install system dependencies
        run: |
          set -e
          apt-get update -qq
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
              wget curl gnupg ca-certificates software-properties-common \
              libnuma1 libgomp1 libopenblas0-pthread libopenblas-dev \
              python3.10 python3.10-venv python3.10-dev python3-pip \
              libcudnn9
          # 变动: 将 python 默认指向 3.10（wheel 为 cp310）
          update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1
          python -m pip install --upgrade pip

      # 2️⃣ 下载最新 wheel
      - name: Download wheel from latest GitHub release
        id: download
        run: |
          set -e
          mkdir -p dist
          RELEASE_URL=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest \
            | grep browser_download_url | grep '.whl"' | cut -d '"' -f 4)
          if [ -z "$RELEASE_URL" ]; then
            echo "No release found. Skipping wheel test."; exit 0
          fi
          WHEEL=$(basename "$RELEASE_URL")
          wget -q "$RELEASE_URL" -O "dist/$WHEEL"
          echo "WHEEL_NAME=$WHEEL" >> "$GITHUB_OUTPUT"
          sha256sum "dist/$WHEEL"

      # 3️⃣ 安装 wheel
      - name: Install wheel
        if: steps.download.outputs.WHEEL_NAME
        run: |
          python -m pip install "dist/${{ steps.download.outputs.WHEEL_NAME }}"

      # 4️⃣ 安装其余依赖（requirements.txt）
      # 变动: 使用最新环境快照
      - name: Install Python dependencies
        run: |
          python -m pip install -r requirements.txt

      # 5️⃣ 运行 demo & 打印环境
      - name: Verify installation
        run: |
          echo "Running demo..."
          python examples/demo_tensor_cuda.py

          python - <<'PY'
          import torch, platform, os
          print("Python  :", platform.python_version())
          print("Torch    :", torch.__version__)
          print("CUDA OK  :", torch.cuda.is_available())
          print("Device   :", torch.cuda.get_device_name(0) if torch.cuda.is_available() else "CPU")
          print("sm arch  :", torch.cuda.get_device_capability() if torch.cuda.is_available() else "N/A")
          PY

      # 6️⃣ 完成提示
      - name: Final check
        if: always()
        run: echo "✅ Test complete! Believe in light – your PyTorch wheel is ready to shine!"
