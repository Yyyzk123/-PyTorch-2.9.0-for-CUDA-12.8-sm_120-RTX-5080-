name: Test Install PyTorch Wheel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  install-test:
    runs-on: ubuntu-latest

    container:
      image: nvidia/cuda:12.8.1-cudnn-runtime-ubuntu24.04  # ✅ 修正为 Ubuntu 24.04 对应镜像

    steps:
      - uses: actions/checkout@v4
        name: Checkout repository

      # ① 安装系统依赖 + cuDNN + OpenBLAS + NUMA + OpenMP
      - name: Install system dependencies, cuDNN, OpenBLAS
        run: |
          set -e
          apt-get update -qq
          apt-get install -y wget curl python3-pip software-properties-common gnupg ca-certificates
          apt-get install -y libnuma1 libgomp1
          apt-get install -y libopenblas0-pthread libopenblas-dev

          # 🔰 cuDNN 软链接兜底：若镜像缺顶层 libcudnn.so.8，则建立链接并刷新缓存
          if [ -e /usr/local/cuda/lib64/libcudnn.so.8 ] && \
             [ ! -e /usr/lib/x86_64-linux-gnu/libcudnn.so.8 ]; then
            echo "🔗  Linking libcudnn.so.8 to system library path..."
            ln -s /usr/local/cuda/lib64/libcudnn.so.8 /usr/lib/x86_64-linux-gnu/libcudnn.so.8
            ldconfig
          fi
   
     
      # ② 安装 Python 3.10
      - name: Set up Python 3.10
        run: |
          set -e
          add-apt-repository ppa:deadsnakes/ppa -y
          apt-get update -qq
          apt-get install -y python3.10 python3.10-venv python3.10-dev python3.10-distutils
          # 绑定 python 和 python3 到 3.10
          update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1
          update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1
          # pip & ensurepip
          python3.10 -m ensurepip --upgrade
          # 如无特殊需求，保持系统 pip 24，省去升级冲突


      # ③ 下载 wheel 文件
      - name: Download wheel from latest GitHub release
        id: download
        run: |
          set -e
          mkdir -p dist
          RELEASE_URL=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest \
            | grep browser_download_url \
            | grep '.whl"' \
            | cut -d '"' -f 4)
          if [ -z "$RELEASE_URL" ]; then
            echo "No release found. Skipping wheel test."
            exit 0
          fi
          WHEEL_NAME=$(basename "$RELEASE_URL")
          wget "$RELEASE_URL" -O "dist/$WHEEL_NAME"
          echo "WHEEL_NAME=$WHEEL_NAME" >> "$GITHUB_OUTPUT"
          
          # ➕ 输出 SHA256 校验和（非强制）
          sha256sum "dist/$WHEEL_NAME"

      # ④ 安装 wheel
      - name: Install from wheel
        if: steps.download.outputs.WHEEL_NAME
        run: |
          chmod +x install_from_whl.sh
          ./install_from_whl.sh "dist/${{ steps.download.outputs.WHEEL_NAME }}"

      # ⑤ 验证 torch + CUDA 正常性
      - name: Verify installation
        if: steps.download.outputs.WHEEL_NAME
        run: |
          echo "Running demo_tensor_cuda.py..."
          python examples/demo_tensor_cuda.py

          echo "Running CUDA check..."
          python -c "import torch; print('✅ torch.cuda.is_available():', torch.cuda.is_available())"

      # ✅ 结束标记
      - name: Final check
        if: always()
        run: echo "✅ Test complete! Believe in light, your PyTorch wheel is ready to shine!"
