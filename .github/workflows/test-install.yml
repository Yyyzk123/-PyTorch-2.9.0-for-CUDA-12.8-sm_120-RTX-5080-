name: Test Install PyTorch Wheel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  install-test:
    runs-on: ubuntu-latest

    # Ubuntu 24.04.2 + CUDA 12.8.1 + cuDNN 9 runtime
    container:
      image: nvidia/cuda:12.8.1-cudnn-runtime-ubuntu24.04

    steps:
      - uses: actions/checkout@v4
        name: Checkout repository

      # ① 安装系统依赖 + cuDNN9 + OpenBLAS + NUMA + OpenMP
      - name: Install system dependencies
        run: |
          set -e
          apt-get update -qq
          apt-get install -y --no-install-recommends \
              wget curl gnupg ca-certificates software-properties-common \
              libnuma1 libgomp1 \
              libopenblas0-pthread libopenblas-dev

          # ---- 安装 cuDNN 9（官方 deb）----
          rm -f /etc/apt/sources.list.d/cuda-ubuntu2404-x86_64.list || true
          wget -q https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-keyring_1.1-1_all.deb
          dpkg -i cuda-keyring_1.1-1_all.deb && rm cuda-keyring_1.1-1_all.deb
          apt-get update -qq
          apt-get install -y libcudnn9

          # 确保 python / python3 指向系统 Python 3.12
          update-alternatives --install /usr/bin/python python /usr/bin/python3 1

      # ② 下载最新 wheel
      - name: Download wheel from latest GitHub release
        id: download
        run: |
          set -e
          mkdir -p dist
          RELEASE_URL=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest \
            | grep browser_download_url | grep '.whl"' | cut -d '"' -f 4)
          if [ -z "$RELEASE_URL" ]; then
            echo "No release found. Skipping wheel test."; exit 0
          fi
          WHEEL_NAME=$(basename "$RELEASE_URL")
          wget "$RELEASE_URL" -O "dist/$WHEEL_NAME"
          echo "WHEEL_NAME=$WHEEL_NAME" >> "$GITHUB_OUTPUT"
          sha256sum "dist/$WHEEL_NAME"

      # ③ 安装 wheel
      - name: Install from wheel
        if: steps.download.outputs.WHEEL_NAME
        run: |
          chmod +x install_from_whl.sh
          ./install_from_whl.sh "dist/${{ steps.download.outputs.WHEEL_NAME }}"

      # ④ 运行 demo & 检查 CUDA
      - name: Verify installation
        if: steps.download.outputs.WHEEL_NAME
        run: |
          echo "Running demo..."
          python examples/demo_tensor_cuda.py

          python - <<'PY'
          import torch, platform
          print("Python :", platform.python_version())
          print("Torch   :", torch.__version__)
          print("CUDA OK :", torch.cuda.is_available())
          PY

      # ✅ 结束标记
      - name: Final check
        if: always()
        run: echo "✅ Test complete! Believe in light, your PyTorch wheel is ready to shine!"
