name: Test Install PyTorch & torchvision Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  install-test:
    runs-on: ubuntu-latest

    container:
      image: nvidia/cuda:12.8.1-cudnn-devel-ubuntu24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install system deps (minimal, repair ldconfig)
      run: |
        set -e
        apt-get update -qq
        
        # 增强修复 ldconfig segfault (Ubuntu 24.04 Docker bug)
        sudo dpkg --configure -a || true
        sudo apt-get install -f -y || true
        sudo rm -f /var/cache/ldconfig/aux-cache
        sudo apt-get purge libc-bin libc6 -y || true
        sudo apt-get install --reinstall libc-bin libc6 -y || true
        sudo /sbin/ldconfig || true
        sudo apt-get clean
        
        # 最小依赖（避免 triggers，镜像预装 cuDNN 9）
        apt-get install -y --no-install-recommends \
            wget curl ca-certificates python3-pip tar
        
    - name: Set up micromamba (Python 3.10)
      run: |
        curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
        ./bin/micromamba create -y -p $HOME/py310 python=3.10
        echo "$HOME/py310/bin" >> $GITHUB_PATH
        export PATH="$HOME/py310/bin:$PATH"

    - name: Download wheels from latest GitHub Release
      id: download
      run: |
        set -e
        mkdir -p dist
        REPO="${{ github.repository }}"
        WHL_URLS=$(curl -s https://api.github.com/repos/$REPO/releases/latest \
          | grep browser_download_url | grep '.whl"' | cut -d '"' -f 4)
        echo "Found wheels:"
        echo "$WHL_URLS"
        for URL in $WHL_URLS; do
          FILE=$(basename "$URL")
          echo "↓ $FILE"
          wget -q "$URL" -O dist/"$FILE"
          sha256sum dist/"$FILE"
        done

    - name: Install wheels & Python deps
      run: |
        export PATH="$HOME/py310/bin:$PATH"
        python -m pip install dist/torch-*.whl
        python -m pip install dist/torchvision-*.whl
        python -m pip install -r requirements.txt

    - name: Verify installation
      run: |
        export PATH="$HOME/py310/bin:$PATH"
        python examples/demo_tensor_cuda.py || true
        python - <<'PY'
        import torch, platform, sys
        print("Python  :", platform.python_version())
        print("Torch   :", torch.__version__)
        print("CUDA OK :", torch.cuda.is_available())
        if torch.cuda.is_available():
            print("GPU Name:", torch.cuda.get_device_name(0))
            print("sm arch :", torch.cuda.get_device_capability())
        else:
            print("GPU Name: (no GPU, CI runner)")
        print("TorchVision:", __import__('torchvision').__version__)
        PY

    - name: Final result
      run: echo "✅ CI completed — wheels install successfully!"
